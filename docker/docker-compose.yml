version: '2.1'
services:
  database:
    image: mariadb:latest
#    build:
#      context: D:\development\workspace\boot3-oauth2-authorization-server2\springboot3-oauth2-authorization-server
#      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    environment:
        MARIADB_DATABASE: "authorizaiton"
#        MARIADB_USER: "user"
#        MARIADB_PASSWORD: "password"
        MARIADB_ROOT_USER: "root"
        MARIADB_ROOT_PASSWORD: "1234"
    volumes:
      - ./initdb/init.sql:/docker-entrypoint-initdb.d/init.sql
#      - ./initdb:/docker-entrypoint-initdb.d
#      - ./data:/docker-entrypoint-initdb.d
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      interval: 1m
      timeout: 5s
      retries: 3
  springboot3oauth2authorizationserver:
    image: dlcndgjs12/springboot3-oauth2-authorizationserver:0.0.1-SNAPSHOT
    build:
      context: D:\development\workspace\boot3-oauth2-authorization-server2\springboot3-oauth2-authorization-server
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    depends_on:
      database:
        condition: service_healthy
    networks:
      backend:
        aliases:
          - "authorizationserver"
#  licensingservice:
#    image: dlcndgjs12/licensing-service:0.0.1-SNAPSHOT
#    environment:
#      PROFILE: "dev"
#      CONFIGSERVER_URI: "http://configserver:8071"
#      CONFIGSERVER_PORT:   "8071"
#      DATABASESERVER_PORT: "5432"
#      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo" # "IMSYMMETRIC"
#    depends_on:
#      database:
#        condition: service_healthy
#      configserver:
#        condition: service_started
#    ports:
#      - "8080:8080"
#    networks:
#      - backend

networks:
  backend:
    driver: bridge